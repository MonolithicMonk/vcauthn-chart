# Default values for vc-authn-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ""
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
  # - name: registry-pullsecrets
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  clusterIP: 
  port: 5000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

configuration:
  allowedHosts: "*"
  swaggerEnabled: true
  apiKey: foI0vDHaHgpaGvzxAH5GapjSQaQWoszSPuoNNaDwb8F7QwfbUWJSD8pA8OvsZAz0MrsGRqrHUQCMglO04WON6EQpWyiuDNjpjdVVof8lCURCicarnlKon95Fh3bfqybubkJ8fPu12yTWVDtMlsEx38pSWVkw3eBXapVqvI4690S7JThOa8iXXzSnR8Xk46zQIGhi7xQyYS5u7P3ZqQzce2tVGiXFJPD32wrr8mLqOWPxd3PniKWFLkICKTdu6FXl
  identityServer:
    pollInterval: 2000
    connectionStrings:
      # construct a connection string
      database: true
    certificateFileName: /controller-data/secret-key.rsa
    publicOrigin: "http://localhost:5000"
    accessTokenLifeTimeSeconds: 172800
    clients:
      - enabled: true
        clientId: keycloak
        clientName: keycloak
        allowedGrantTypes: 
          - implicit
          - code
        allowedScopes:
          - opendid
          - profile
          - vc_authn
        redirectUris:
          - http://localhost:8180/auth/realms/vc-authn/broker/vc-authn/endpoint
        requireClientSecret: false
        requireConsent: false
  acapy:
    adminUrl: 
    apiKey: 
    agentUrl: 
  urlShortenerService:
    connectionStrings:
      # construct a connection string
      database: true
    baseUrl: http://localhost:5000/url
  sessionStorageService:
    connectionStrings:
      # construct a connection string
      database: true
    sessionLifetimeInSeconds: 
  serilog:
    minimumLevel:
      default: debug
      override:
        system: warning
        microsoft: warning
    writeTo: 
      - Name: Console
    enrich: 
      - FromLogContext
  aspNetCoreUrls: ""
  postgresql: 
    host: ""
    # postgresql.default.svc.cluster.local 
    port: 5432
    password: ""
    username: ""
    database: ""

diode:
  # If enabled, the deployment will be created
  enabled: false
  replicaCount: 1

  image:
    repository: 
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: 

  imagePullSecrets: []
    # - name: registry-pullsecrets
  nameOverride: ""
  fullnameOverride: 

  serviceAccount:
    # Specifies whether a service account should be created
    create: false
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  service:
    # Likely true if bind and false if publish
    enabled: true
    type: ClusterIP
    clusterIP: 
    port: 
    targetPort: 
    protocol: TCP

  diodeConfiguration:
    localServer:
      diodeHex: ""
      diodePinata: ""
      diodeKeyName: ""
      # Protocol used for the diode connection. Default: tls.
      # Options are tcp, udp, tls
      protocol: tcp
      # Options are "public" and "private"
      publishType: 
      # Diode mode. Options are "publish", "bind", and "both"
      mode: 
    remoteServer:
      # Remote diode configuration
      remoteDiodeHex: ""
      port: 
      # Protocol used for the diode connection. Default: tls.
      # Options are tcp, udp, tls
      protocol: ""
      # Type of connection. Default: public. 
      # Options are "public" and "private"
      publishType: ""
      # Only publish for now
      mode: ""
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80

  nodeSelector: {}

  tolerations: []

  affinity: {}

  storage:
    keepPvc: true
    # Size of storage. Default: 20Mi
    size: "20Mi"
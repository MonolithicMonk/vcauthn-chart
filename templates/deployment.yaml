apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vcauthn.fullname" . }}
  labels:
    {{- include "vcauthn.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "vcauthn.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "vcauthn.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "vcauthn.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          args:
          - -c
          - |
            dotnet VCAuthn.dll
          command:
          - /bin/bash
          env:
          - name: POSTGRESQL_USERNAME
            valueFrom:
              secretKeyRef:
                key: postgresql-username
                name: {{ include "vcauthn.fullname" . }}-config
          - name: POSTGRESQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: postgresql-password
                name: {{ include "vcauthn.fullname" . }}-config
          - name: VC_AUTHN_PORT
            value: {{ .Values.service.port | quote }}
          - name: ASPNETCORE_URLS
            value: {{ .Values.configuration.aspNetCoreUrls }}
          {{- if .Values.configuration.allowedHosts }}
          - name: AllowedHosts
            value: {{ .Values.configuration.allowedHosts | quote }}
          {{- end }}
          {{- if .Values.configuration.swaggerEnabled }}
          - name: SwaggerEnabled
            value: {{ .Values.configuration.swaggerEnabled | quote }}
          {{- end }}
          {{- if .Values.configuration.allowedHosts }}
          - name: ApiKey
            valueFrom:
              secretKeyRef:
                key: api-key
                name: {{ include "vcauthn.fullname" . }}-config
          {{- end }}
          {{- if .Values.configuration.identityServer.pollInterval }}
          - name: IdentityServer__PollInterval
            value: {{ .Values.configuration.identityServer.pollInterval | quote }}
          {{- end }}
          {{- if .Values.configuration.identityServer.connectionStrings.database }}
          - name: IdentityServer__ConnectionStrings__Database
            value: "Host={{ .Values.configuration.postgresql.host }};Port={{ .Values.configuration.postgresql.port }};Database={{ .Values.configuration.postgresql.database }};Username=$(POSTGRESQL_USERNAME);Password=$(POSTGRESQL_PASSWORD)"
          {{- end }}  
          {{- if .Values.configuration.identityServer.certificateFileName }}
          - name: IdentityServer__CertificateFilename
            value: {{ .Values.configuration.identityServer.certificateFileName }}
          {{- end }}
          {{- if .Values.configuration.identityServer.publicOrigin }}
          - name: IdentityServer__PublicOrigin
            value: {{ .Values.configuration.identityServer.publicOrigin }}
          {{- end }}
          {{- if .Values.configuration.identityServer.accessTokenLifeTimeSeconds }}
          - name: IdentityServer__AccessTokenLifeTimeSeconds
            value: {{ .Values.configuration.identityServer.accessTokenLifeTimeSeconds | quote }}
          {{- end }}
          {{- if gt (len .Values.configuration.identityServer.clients) 0 }}
          {{- include "generateEnvVarsClients" . | indent 10 }}
          {{- end }}
          {{- if .Values.configuration.acapy.adminUrl }}
          - name: ACAPY__AdminUrl
            value: {{ .Values.configuration.acapy.adminUrl }}
          {{- end }}
          {{- if .Values.configuration.acapy.apiKey }}
          - name: ACAPY__AdminURLApiKey
            valueFrom:
              secretKeyRef:
                key: acapy-admin-api-key
                name: {{ include "vcauthn.fullname" . }}-config
          {{- end }}
          {{- if .Values.configuration.acapy.agentUrl }}
          - name: ACAPY__AgentUrl
            value: {{ .Values.configuration.acapy.agentUrl }}
          {{- end }}
          {{- if .Values.configuration.urlShortenerService.connectionStrings.database }}
          - name: UrlShortenerService__ConnectionStrings__Database
            value: "Host={{ .Values.configuration.postgresql.host }};Port={{ .Values.configuration.postgresql.port }};Database={{ .Values.configuration.postgresql.database }};Username=$(POSTGRESQL_USERNAME);Password=$(POSTGRESQL_PASSWORD)"
          {{- end }}
          {{- if .Values.configuration.urlShortenerService.baseUrl }}
          - name: UrlShortenerService__BaseUrl
            value: {{ .Values.configuration.urlShortenerService.baseUrl }}
          {{- end }}
          {{- if .Values.configuration.sessionStorageService.connectionStrings.database }}
          - name: SessionStorageService__ConnectionStrings__Database
            value: "Host={{ .Values.configuration.postgresql.host }};Port={{ .Values.configuration.postgresql.port }};Database={{ .Values.configuration.postgresql.database }};Username=$(POSTGRESQL_USERNAME);Password=$(POSTGRESQL_PASSWORD)"
          {{- end }}
          {{- if .Values.configuration.sessionStorageService.sessionLifetimeInSeconds }}
          - name: SessionStorageService__SessionLifetimeInSeconds
            value: {{ .Values.configuration.sessionStorageService.sessionLifetimeInSeconds | quote }}
          {{- end }}
          {{- include "generateEnvVarsLogs" . | indent 10 }}
          - name: Serilog__WriteTo__0__Args__outputTemplate
            value: "{Timestamp:yyyy-MM-dd HH:mm:ss.fff zzz} [{Level}] [{SourceContext}] [{EventId}] {Message}{NewLine}{Exception}"
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 25
            periodSeconds: 10  
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10  
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - mountPath: /controller-data
              name: vcauthn-secret-key-data
              readOnly: true
      volumes:
      - name: vcauthn-secret-key-data
        secret:
          secretName: {{ include "vcauthn.fullname" . }}-rsa
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
